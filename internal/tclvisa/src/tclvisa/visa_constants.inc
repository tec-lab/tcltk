#ifdef VI_TRUE
addIntVar( VI_TRUE );
#endif

#ifdef VI_FALSE
addIntVar( VI_FALSE );
#endif

#ifdef VI_SUCCESS
addIntVar( VI_SUCCESS );
#endif

#ifdef VI_ATTR_RSRC_CLASS
addIntVar( VI_ATTR_RSRC_CLASS );
#endif

#ifdef VI_ATTR_RSRC_NAME
addIntVar( VI_ATTR_RSRC_NAME );
#endif

#ifdef VI_ATTR_RSRC_IMPL_VERSION
addIntVar( VI_ATTR_RSRC_IMPL_VERSION );
#endif

#ifdef VI_ATTR_RSRC_LOCK_STATE
addIntVar( VI_ATTR_RSRC_LOCK_STATE );
#endif

#ifdef VI_ATTR_MAX_QUEUE_LENGTH
addIntVar( VI_ATTR_MAX_QUEUE_LENGTH );
#endif

#ifdef VI_ATTR_USER_DATA_32
addIntVar( VI_ATTR_USER_DATA_32 );
#endif

#ifdef VI_ATTR_FDC_CHNL
addIntVar( VI_ATTR_FDC_CHNL );
#endif

#ifdef VI_ATTR_FDC_MODE
addIntVar( VI_ATTR_FDC_MODE );
#endif

#ifdef VI_ATTR_FDC_GEN_SIGNAL_EN
addIntVar( VI_ATTR_FDC_GEN_SIGNAL_EN );
#endif

#ifdef VI_ATTR_FDC_USE_PAIR
addIntVar( VI_ATTR_FDC_USE_PAIR );
#endif

#ifdef VI_ATTR_SEND_END_EN
addIntVar( VI_ATTR_SEND_END_EN );
#endif

#ifdef VI_ATTR_TERMCHAR
addIntVar( VI_ATTR_TERMCHAR );
#endif

#ifdef VI_ATTR_TMO_VALUE
addIntVar( VI_ATTR_TMO_VALUE );
#endif

#ifdef VI_ATTR_GPIB_READDR_EN
addIntVar( VI_ATTR_GPIB_READDR_EN );
#endif

#ifdef VI_ATTR_IO_PROT
addIntVar( VI_ATTR_IO_PROT );
#endif

#ifdef VI_ATTR_DMA_ALLOW_EN
addIntVar( VI_ATTR_DMA_ALLOW_EN );
#endif

#ifdef VI_ATTR_ASRL_BAUD
addIntVar( VI_ATTR_ASRL_BAUD );
#endif

#ifdef VI_ATTR_ASRL_DATA_BITS
addIntVar( VI_ATTR_ASRL_DATA_BITS );
#endif

#ifdef VI_ATTR_ASRL_PARITY
addIntVar( VI_ATTR_ASRL_PARITY );
#endif

#ifdef VI_ATTR_ASRL_STOP_BITS
addIntVar( VI_ATTR_ASRL_STOP_BITS );
#endif

#ifdef VI_ATTR_ASRL_FLOW_CNTRL
addIntVar( VI_ATTR_ASRL_FLOW_CNTRL );
#endif

#ifdef VI_ATTR_RD_BUF_OPER_MODE
addIntVar( VI_ATTR_RD_BUF_OPER_MODE );
#endif

#ifdef VI_ATTR_RD_BUF_SIZE
addIntVar( VI_ATTR_RD_BUF_SIZE );
#endif

#ifdef VI_ATTR_WR_BUF_OPER_MODE
addIntVar( VI_ATTR_WR_BUF_OPER_MODE );
#endif

#ifdef VI_ATTR_WR_BUF_SIZE
addIntVar( VI_ATTR_WR_BUF_SIZE );
#endif

#ifdef VI_ATTR_SUPPRESS_END_EN
addIntVar( VI_ATTR_SUPPRESS_END_EN );
#endif

#ifdef VI_ATTR_TERMCHAR_EN
addIntVar( VI_ATTR_TERMCHAR_EN );
#endif

#ifdef VI_ATTR_DEST_ACCESS_PRIV
addIntVar( VI_ATTR_DEST_ACCESS_PRIV );
#endif

#ifdef VI_ATTR_DEST_BYTE_ORDER
addIntVar( VI_ATTR_DEST_BYTE_ORDER );
#endif

#ifdef VI_ATTR_SRC_ACCESS_PRIV
addIntVar( VI_ATTR_SRC_ACCESS_PRIV );
#endif

#ifdef VI_ATTR_SRC_BYTE_ORDER
addIntVar( VI_ATTR_SRC_BYTE_ORDER );
#endif

#ifdef VI_ATTR_SRC_INCREMENT
addIntVar( VI_ATTR_SRC_INCREMENT );
#endif

#ifdef VI_ATTR_DEST_INCREMENT
addIntVar( VI_ATTR_DEST_INCREMENT );
#endif

#ifdef VI_ATTR_WIN_ACCESS_PRIV
addIntVar( VI_ATTR_WIN_ACCESS_PRIV );
#endif

#ifdef VI_ATTR_WIN_BYTE_ORDER
addIntVar( VI_ATTR_WIN_BYTE_ORDER );
#endif

#ifdef VI_ATTR_GPIB_ATN_STATE
addIntVar( VI_ATTR_GPIB_ATN_STATE );
#endif

#ifdef VI_ATTR_GPIB_ADDR_STATE
addIntVar( VI_ATTR_GPIB_ADDR_STATE );
#endif

#ifdef VI_ATTR_GPIB_CIC_STATE
addIntVar( VI_ATTR_GPIB_CIC_STATE );
#endif

#ifdef VI_ATTR_GPIB_NDAC_STATE
addIntVar( VI_ATTR_GPIB_NDAC_STATE );
#endif

#ifdef VI_ATTR_GPIB_SRQ_STATE
addIntVar( VI_ATTR_GPIB_SRQ_STATE );
#endif

#ifdef VI_ATTR_GPIB_SYS_CNTRL_STATE
addIntVar( VI_ATTR_GPIB_SYS_CNTRL_STATE );
#endif

#ifdef VI_ATTR_GPIB_HS488_CBL_LEN
addIntVar( VI_ATTR_GPIB_HS488_CBL_LEN );
#endif

#ifdef VI_ATTR_CMDR_LA
addIntVar( VI_ATTR_CMDR_LA );
#endif

#ifdef VI_ATTR_VXI_DEV_CLASS
addIntVar( VI_ATTR_VXI_DEV_CLASS );
#endif

#ifdef VI_ATTR_MAINFRAME_LA
addIntVar( VI_ATTR_MAINFRAME_LA );
#endif

#ifdef VI_ATTR_MANF_NAME
addIntVar( VI_ATTR_MANF_NAME );
#endif

#ifdef VI_ATTR_MODEL_NAME
addIntVar( VI_ATTR_MODEL_NAME );
#endif

#ifdef VI_ATTR_VXI_VME_INTR_STATUS
addIntVar( VI_ATTR_VXI_VME_INTR_STATUS );
#endif

#ifdef VI_ATTR_VXI_TRIG_STATUS
addIntVar( VI_ATTR_VXI_TRIG_STATUS );
#endif

#ifdef VI_ATTR_VXI_VME_SYSFAIL_STATE
addIntVar( VI_ATTR_VXI_VME_SYSFAIL_STATE );
#endif

#ifdef VI_ATTR_WIN_BASE_ADDR_32
addIntVar( VI_ATTR_WIN_BASE_ADDR_32 );
#endif

#ifdef VI_ATTR_WIN_SIZE_32
addIntVar( VI_ATTR_WIN_SIZE_32 );
#endif

#ifdef VI_ATTR_ASRL_AVAIL_NUM
addIntVar( VI_ATTR_ASRL_AVAIL_NUM );
#endif

#ifdef VI_ATTR_MEM_BASE_32
addIntVar( VI_ATTR_MEM_BASE_32 );
#endif

#ifdef VI_ATTR_ASRL_CTS_STATE
addIntVar( VI_ATTR_ASRL_CTS_STATE );
#endif

#ifdef VI_ATTR_ASRL_DCD_STATE
addIntVar( VI_ATTR_ASRL_DCD_STATE );
#endif

#ifdef VI_ATTR_ASRL_DSR_STATE
addIntVar( VI_ATTR_ASRL_DSR_STATE );
#endif

#ifdef VI_ATTR_ASRL_DTR_STATE
addIntVar( VI_ATTR_ASRL_DTR_STATE );
#endif

#ifdef VI_ATTR_ASRL_END_IN
addIntVar( VI_ATTR_ASRL_END_IN );
#endif

#ifdef VI_ATTR_ASRL_END_OUT
addIntVar( VI_ATTR_ASRL_END_OUT );
#endif

#ifdef VI_ATTR_ASRL_REPLACE_CHAR
addIntVar( VI_ATTR_ASRL_REPLACE_CHAR );
#endif

#ifdef VI_ATTR_ASRL_RI_STATE
addIntVar( VI_ATTR_ASRL_RI_STATE );
#endif

#ifdef VI_ATTR_ASRL_RTS_STATE
addIntVar( VI_ATTR_ASRL_RTS_STATE );
#endif

#ifdef VI_ATTR_ASRL_XON_CHAR
addIntVar( VI_ATTR_ASRL_XON_CHAR );
#endif

#ifdef VI_ATTR_ASRL_XOFF_CHAR
addIntVar( VI_ATTR_ASRL_XOFF_CHAR );
#endif

#ifdef VI_ATTR_WIN_ACCESS
addIntVar( VI_ATTR_WIN_ACCESS );
#endif

#ifdef VI_ATTR_RM_SESSION
addIntVar( VI_ATTR_RM_SESSION );
#endif

#ifdef VI_ATTR_VXI_LA
addIntVar( VI_ATTR_VXI_LA );
#endif

#ifdef VI_ATTR_MANF_ID
addIntVar( VI_ATTR_MANF_ID );
#endif

#ifdef VI_ATTR_MEM_SIZE_32
addIntVar( VI_ATTR_MEM_SIZE_32 );
#endif

#ifdef VI_ATTR_MEM_SPACE
addIntVar( VI_ATTR_MEM_SPACE );
#endif

#ifdef VI_ATTR_MODEL_CODE
addIntVar( VI_ATTR_MODEL_CODE );
#endif

#ifdef VI_ATTR_SLOT
addIntVar( VI_ATTR_SLOT );
#endif

#ifdef VI_ATTR_INTF_INST_NAME
addIntVar( VI_ATTR_INTF_INST_NAME );
#endif

#ifdef VI_ATTR_IMMEDIATE_SERV
addIntVar( VI_ATTR_IMMEDIATE_SERV );
#endif

#ifdef VI_ATTR_INTF_PARENT_NUM
addIntVar( VI_ATTR_INTF_PARENT_NUM );
#endif

#ifdef VI_ATTR_RSRC_SPEC_VERSION
addIntVar( VI_ATTR_RSRC_SPEC_VERSION );
#endif

#ifdef VI_ATTR_INTF_TYPE
addIntVar( VI_ATTR_INTF_TYPE );
#endif

#ifdef VI_ATTR_GPIB_PRIMARY_ADDR
addIntVar( VI_ATTR_GPIB_PRIMARY_ADDR );
#endif

#ifdef VI_ATTR_GPIB_SECONDARY_ADDR
addIntVar( VI_ATTR_GPIB_SECONDARY_ADDR );
#endif

#ifdef VI_ATTR_RSRC_MANF_NAME
addIntVar( VI_ATTR_RSRC_MANF_NAME );
#endif

#ifdef VI_ATTR_RSRC_MANF_ID
addIntVar( VI_ATTR_RSRC_MANF_ID );
#endif

#ifdef VI_ATTR_INTF_NUM
addIntVar( VI_ATTR_INTF_NUM );
#endif

#ifdef VI_ATTR_TRIG_ID
addIntVar( VI_ATTR_TRIG_ID );
#endif

#ifdef VI_ATTR_GPIB_REN_STATE
addIntVar( VI_ATTR_GPIB_REN_STATE );
#endif

#ifdef VI_ATTR_GPIB_UNADDR_EN
addIntVar( VI_ATTR_GPIB_UNADDR_EN );
#endif

#ifdef VI_ATTR_DEV_STATUS_BYTE
addIntVar( VI_ATTR_DEV_STATUS_BYTE );
#endif

#ifdef VI_ATTR_FILE_APPEND_EN
addIntVar( VI_ATTR_FILE_APPEND_EN );
#endif

#ifdef VI_ATTR_VXI_TRIG_SUPPORT
addIntVar( VI_ATTR_VXI_TRIG_SUPPORT );
#endif

#ifdef VI_ATTR_TCPIP_ADDR
addIntVar( VI_ATTR_TCPIP_ADDR );
#endif

#ifdef VI_ATTR_TCPIP_HOSTNAME
addIntVar( VI_ATTR_TCPIP_HOSTNAME );
#endif

#ifdef VI_ATTR_TCPIP_PORT
addIntVar( VI_ATTR_TCPIP_PORT );
#endif

#ifdef VI_ATTR_TCPIP_DEVICE_NAME
addIntVar( VI_ATTR_TCPIP_DEVICE_NAME );
#endif

#ifdef VI_ATTR_TCPIP_NODELAY
addIntVar( VI_ATTR_TCPIP_NODELAY );
#endif

#ifdef VI_ATTR_TCPIP_KEEPALIVE
addIntVar( VI_ATTR_TCPIP_KEEPALIVE );
#endif

#ifdef VI_ATTR_4882_COMPLIANT
addIntVar( VI_ATTR_4882_COMPLIANT );
#endif

#ifdef VI_ATTR_USB_SERIAL_NUM
addIntVar( VI_ATTR_USB_SERIAL_NUM );
#endif

#ifdef VI_ATTR_USB_INTFC_NUM
addIntVar( VI_ATTR_USB_INTFC_NUM );
#endif

#ifdef VI_ATTR_USB_PROTOCOL
addIntVar( VI_ATTR_USB_PROTOCOL );
#endif

#ifdef VI_ATTR_USB_MAX_INTR_SIZE
addIntVar( VI_ATTR_USB_MAX_INTR_SIZE );
#endif

#ifdef VI_ATTR_PXI_DEV_NUM
addIntVar( VI_ATTR_PXI_DEV_NUM );
#endif

#ifdef VI_ATTR_PXI_FUNC_NUM
addIntVar( VI_ATTR_PXI_FUNC_NUM );
#endif

#ifdef VI_ATTR_PXI_BUS_NUM
addIntVar( VI_ATTR_PXI_BUS_NUM );
#endif

#ifdef VI_ATTR_PXI_CHASSIS
addIntVar( VI_ATTR_PXI_CHASSIS );
#endif

#ifdef VI_ATTR_PXI_SLOTPATH
addIntVar( VI_ATTR_PXI_SLOTPATH );
#endif

#ifdef VI_ATTR_PXI_SLOT_LBUS_LEFT
addIntVar( VI_ATTR_PXI_SLOT_LBUS_LEFT );
#endif

#ifdef VI_ATTR_PXI_SLOT_LBUS_RIGHT
addIntVar( VI_ATTR_PXI_SLOT_LBUS_RIGHT );
#endif

#ifdef VI_ATTR_PXI_TRIG_BUS
addIntVar( VI_ATTR_PXI_TRIG_BUS );
#endif

#ifdef VI_ATTR_PXI_STAR_TRIG_BUS
addIntVar( VI_ATTR_PXI_STAR_TRIG_BUS );
#endif

#ifdef VI_ATTR_PXI_STAR_TRIG_LINE
addIntVar( VI_ATTR_PXI_STAR_TRIG_LINE );
#endif

#ifdef VI_ATTR_PXI_MEM_TYPE_BAR0
addIntVar( VI_ATTR_PXI_MEM_TYPE_BAR0 );
#endif

#ifdef VI_ATTR_PXI_MEM_TYPE_BAR1
addIntVar( VI_ATTR_PXI_MEM_TYPE_BAR1 );
#endif

#ifdef VI_ATTR_PXI_MEM_TYPE_BAR2
addIntVar( VI_ATTR_PXI_MEM_TYPE_BAR2 );
#endif

#ifdef VI_ATTR_PXI_MEM_TYPE_BAR3
addIntVar( VI_ATTR_PXI_MEM_TYPE_BAR3 );
#endif

#ifdef VI_ATTR_PXI_MEM_TYPE_BAR4
addIntVar( VI_ATTR_PXI_MEM_TYPE_BAR4 );
#endif

#ifdef VI_ATTR_PXI_MEM_TYPE_BAR5
addIntVar( VI_ATTR_PXI_MEM_TYPE_BAR5 );
#endif

#ifdef VI_ATTR_PXI_MEM_BASE_BAR0
addIntVar( VI_ATTR_PXI_MEM_BASE_BAR0 );
#endif

#ifdef VI_ATTR_PXI_MEM_BASE_BAR1
addIntVar( VI_ATTR_PXI_MEM_BASE_BAR1 );
#endif

#ifdef VI_ATTR_PXI_MEM_BASE_BAR2
addIntVar( VI_ATTR_PXI_MEM_BASE_BAR2 );
#endif

#ifdef VI_ATTR_PXI_MEM_BASE_BAR3
addIntVar( VI_ATTR_PXI_MEM_BASE_BAR3 );
#endif

#ifdef VI_ATTR_PXI_MEM_BASE_BAR4
addIntVar( VI_ATTR_PXI_MEM_BASE_BAR4 );
#endif

#ifdef VI_ATTR_PXI_MEM_BASE_BAR5
addIntVar( VI_ATTR_PXI_MEM_BASE_BAR5 );
#endif

#ifdef VI_ATTR_PXI_MEM_SIZE_BAR0
addIntVar( VI_ATTR_PXI_MEM_SIZE_BAR0 );
#endif

#ifdef VI_ATTR_PXI_MEM_SIZE_BAR1
addIntVar( VI_ATTR_PXI_MEM_SIZE_BAR1 );
#endif

#ifdef VI_ATTR_PXI_MEM_SIZE_BAR2
addIntVar( VI_ATTR_PXI_MEM_SIZE_BAR2 );
#endif

#ifdef VI_ATTR_PXI_MEM_SIZE_BAR3
addIntVar( VI_ATTR_PXI_MEM_SIZE_BAR3 );
#endif

#ifdef VI_ATTR_PXI_MEM_SIZE_BAR4
addIntVar( VI_ATTR_PXI_MEM_SIZE_BAR4 );
#endif

#ifdef VI_ATTR_PXI_MEM_SIZE_BAR5
addIntVar( VI_ATTR_PXI_MEM_SIZE_BAR5 );
#endif

#ifdef VI_ATTR_PXI_IS_EXPRESS
addIntVar( VI_ATTR_PXI_IS_EXPRESS );
#endif

#ifdef VI_ATTR_PXI_SLOT_LWIDTH
addIntVar( VI_ATTR_PXI_SLOT_LWIDTH );
#endif

#ifdef VI_ATTR_PXI_MAX_LWIDTH
addIntVar( VI_ATTR_PXI_MAX_LWIDTH );
#endif

#ifdef VI_ATTR_PXI_ACTUAL_LWIDTH
addIntVar( VI_ATTR_PXI_ACTUAL_LWIDTH );
#endif

#ifdef VI_ATTR_PXI_DSTAR_BUS
addIntVar( VI_ATTR_PXI_DSTAR_BUS );
#endif

#ifdef VI_ATTR_PXI_DSTAR_SET
addIntVar( VI_ATTR_PXI_DSTAR_SET );
#endif

#ifdef VI_ATTR_TCPIP_HISLIP_OVERLAP_EN
addIntVar( VI_ATTR_TCPIP_HISLIP_OVERLAP_EN );
#endif

#ifdef VI_ATTR_TCPIP_HISLIP_VERSION
addIntVar( VI_ATTR_TCPIP_HISLIP_VERSION );
#endif

#ifdef VI_ATTR_TCPIP_HISLIP_MAX_MESSAGE_KB
addIntVar( VI_ATTR_TCPIP_HISLIP_MAX_MESSAGE_KB );
#endif

#ifdef VI_ATTR_JOB_ID
addIntVar( VI_ATTR_JOB_ID );
#endif

#ifdef VI_ATTR_EVENT_TYPE
addIntVar( VI_ATTR_EVENT_TYPE );
#endif

#ifdef VI_ATTR_SIGP_STATUS_ID
addIntVar( VI_ATTR_SIGP_STATUS_ID );
#endif

#ifdef VI_ATTR_RECV_TRIG_ID
addIntVar( VI_ATTR_RECV_TRIG_ID );
#endif

#ifdef VI_ATTR_INTR_STATUS_ID
addIntVar( VI_ATTR_INTR_STATUS_ID );
#endif

#ifdef VI_ATTR_STATUS
addIntVar( VI_ATTR_STATUS );
#endif

#ifdef VI_ATTR_RET_COUNT_32
addIntVar( VI_ATTR_RET_COUNT_32 );
#endif

#ifdef VI_ATTR_BUFFER
addIntVar( VI_ATTR_BUFFER );
#endif

#ifdef VI_ATTR_RECV_INTR_LEVEL
addIntVar( VI_ATTR_RECV_INTR_LEVEL );
#endif

#ifdef VI_ATTR_OPER_NAME
addIntVar( VI_ATTR_OPER_NAME );
#endif

#ifdef VI_ATTR_GPIB_RECV_CIC_STATE
addIntVar( VI_ATTR_GPIB_RECV_CIC_STATE );
#endif

#ifdef VI_ATTR_RECV_TCPIP_ADDR
addIntVar( VI_ATTR_RECV_TCPIP_ADDR );
#endif

#ifdef VI_ATTR_USB_RECV_INTR_SIZE
addIntVar( VI_ATTR_USB_RECV_INTR_SIZE );
#endif

#ifdef VI_ATTR_USB_RECV_INTR_DATA
addIntVar( VI_ATTR_USB_RECV_INTR_DATA );
#endif

#ifdef VI_EVENT_IO_COMPLETION
addIntVar( VI_EVENT_IO_COMPLETION );
#endif

#ifdef VI_EVENT_TRIG
addIntVar( VI_EVENT_TRIG );
#endif

#ifdef VI_EVENT_SERVICE_REQ
addIntVar( VI_EVENT_SERVICE_REQ );
#endif

#ifdef VI_EVENT_CLEAR
addIntVar( VI_EVENT_CLEAR );
#endif

#ifdef VI_EVENT_EXCEPTION
addIntVar( VI_EVENT_EXCEPTION );
#endif

#ifdef VI_EVENT_GPIB_CIC
addIntVar( VI_EVENT_GPIB_CIC );
#endif

#ifdef VI_EVENT_GPIB_TALK
addIntVar( VI_EVENT_GPIB_TALK );
#endif

#ifdef VI_EVENT_GPIB_LISTEN
addIntVar( VI_EVENT_GPIB_LISTEN );
#endif

#ifdef VI_EVENT_VXI_VME_SYSFAIL
addIntVar( VI_EVENT_VXI_VME_SYSFAIL );
#endif

#ifdef VI_EVENT_VXI_VME_SYSRESET
addIntVar( VI_EVENT_VXI_VME_SYSRESET );
#endif

#ifdef VI_EVENT_VXI_SIGP
addIntVar( VI_EVENT_VXI_SIGP );
#endif

#ifdef VI_EVENT_VXI_VME_INTR
addIntVar( VI_EVENT_VXI_VME_INTR );
#endif

#ifdef VI_EVENT_PXI_INTR
addIntVar( VI_EVENT_PXI_INTR );
#endif

#ifdef VI_EVENT_TCPIP_CONNECT
addIntVar( VI_EVENT_TCPIP_CONNECT );
#endif

#ifdef VI_EVENT_USB_INTR
addIntVar( VI_EVENT_USB_INTR );
#endif

#ifdef VI_ALL_ENABLED_EVENTS
addIntVar( VI_ALL_ENABLED_EVENTS );
#endif

#ifdef VI_FIND_BUFLEN
addIntVar( VI_FIND_BUFLEN );
#endif

#ifdef VI_INTF_GPIB
addIntVar( VI_INTF_GPIB );
#endif

#ifdef VI_INTF_VXI
addIntVar( VI_INTF_VXI );
#endif

#ifdef VI_INTF_GPIB_VXI
addIntVar( VI_INTF_GPIB_VXI );
#endif

#ifdef VI_INTF_ASRL
addIntVar( VI_INTF_ASRL );
#endif

#ifdef VI_INTF_PXI
addIntVar( VI_INTF_PXI );
#endif

#ifdef VI_INTF_TCPIP
addIntVar( VI_INTF_TCPIP );
#endif

#ifdef VI_INTF_USB
addIntVar( VI_INTF_USB );
#endif

#ifdef VI_PROT_NORMAL
addIntVar( VI_PROT_NORMAL );
#endif

#ifdef VI_PROT_FDC
addIntVar( VI_PROT_FDC );
#endif

#ifdef VI_PROT_HS488
addIntVar( VI_PROT_HS488 );
#endif

#ifdef VI_PROT_4882_STRS
addIntVar( VI_PROT_4882_STRS );
#endif

#ifdef VI_PROT_USBTMC_VENDOR
addIntVar( VI_PROT_USBTMC_VENDOR );
#endif

#ifdef VI_FDC_NORMAL
addIntVar( VI_FDC_NORMAL );
#endif

#ifdef VI_FDC_STREAM
addIntVar( VI_FDC_STREAM );
#endif

#ifdef VI_LOCAL_SPACE
addIntVar( VI_LOCAL_SPACE );
#endif

#ifdef VI_A16_SPACE
addIntVar( VI_A16_SPACE );
#endif

#ifdef VI_A24_SPACE
addIntVar( VI_A24_SPACE );
#endif

#ifdef VI_A32_SPACE
addIntVar( VI_A32_SPACE );
#endif

#ifdef VI_A64_SPACE
addIntVar( VI_A64_SPACE );
#endif

#ifdef VI_PXI_ALLOC_SPACE
addIntVar( VI_PXI_ALLOC_SPACE );
#endif

#ifdef VI_PXI_CFG_SPACE
addIntVar( VI_PXI_CFG_SPACE );
#endif

#ifdef VI_PXI_BAR0_SPACE
addIntVar( VI_PXI_BAR0_SPACE );
#endif

#ifdef VI_PXI_BAR1_SPACE
addIntVar( VI_PXI_BAR1_SPACE );
#endif

#ifdef VI_PXI_BAR2_SPACE
addIntVar( VI_PXI_BAR2_SPACE );
#endif

#ifdef VI_PXI_BAR3_SPACE
addIntVar( VI_PXI_BAR3_SPACE );
#endif

#ifdef VI_PXI_BAR4_SPACE
addIntVar( VI_PXI_BAR4_SPACE );
#endif

#ifdef VI_PXI_BAR5_SPACE
addIntVar( VI_PXI_BAR5_SPACE );
#endif

#ifdef VI_OPAQUE_SPACE
addIntVar( VI_OPAQUE_SPACE );
#endif

#ifdef VI_UNKNOWN_LA
addIntVar( VI_UNKNOWN_LA );
#endif

#ifdef VI_UNKNOWN_SLOT
addIntVar( VI_UNKNOWN_SLOT );
#endif

#ifdef VI_UNKNOWN_LEVEL
addIntVar( VI_UNKNOWN_LEVEL );
#endif

#ifdef VI_UNKNOWN_CHASSIS
addIntVar( VI_UNKNOWN_CHASSIS );
#endif

#ifdef VI_QUEUE
addIntVar( VI_QUEUE );
#endif

#ifdef VI_HNDLR
addIntVar( VI_HNDLR );
#endif

#ifdef VI_SUSPEND_HNDLR
addIntVar( VI_SUSPEND_HNDLR );
#endif

#ifdef VI_ALL_MECH
addIntVar( VI_ALL_MECH );
#endif

#ifdef VI_ANY_HNDLR
addIntVar( VI_ANY_HNDLR );
#endif

#ifdef VI_TRIG_ALL
addIntVar( VI_TRIG_ALL );
#endif

#ifdef VI_TRIG_SW
addIntVar( VI_TRIG_SW );
#endif

#ifdef VI_TRIG_TTL0
addIntVar( VI_TRIG_TTL0 );
#endif

#ifdef VI_TRIG_TTL1
addIntVar( VI_TRIG_TTL1 );
#endif

#ifdef VI_TRIG_TTL2
addIntVar( VI_TRIG_TTL2 );
#endif

#ifdef VI_TRIG_TTL3
addIntVar( VI_TRIG_TTL3 );
#endif

#ifdef VI_TRIG_TTL4
addIntVar( VI_TRIG_TTL4 );
#endif

#ifdef VI_TRIG_TTL5
addIntVar( VI_TRIG_TTL5 );
#endif

#ifdef VI_TRIG_TTL6
addIntVar( VI_TRIG_TTL6 );
#endif

#ifdef VI_TRIG_TTL7
addIntVar( VI_TRIG_TTL7 );
#endif

#ifdef VI_TRIG_ECL0
addIntVar( VI_TRIG_ECL0 );
#endif

#ifdef VI_TRIG_ECL1
addIntVar( VI_TRIG_ECL1 );
#endif

#ifdef VI_TRIG_PANEL_IN
addIntVar( VI_TRIG_PANEL_IN );
#endif

#ifdef VI_TRIG_PANEL_OUT
addIntVar( VI_TRIG_PANEL_OUT );
#endif

#ifdef VI_TRIG_PROT_DEFAULT
addIntVar( VI_TRIG_PROT_DEFAULT );
#endif

#ifdef VI_TRIG_PROT_ON
addIntVar( VI_TRIG_PROT_ON );
#endif

#ifdef VI_TRIG_PROT_OFF
addIntVar( VI_TRIG_PROT_OFF );
#endif

#ifdef VI_TRIG_PROT_SYNC
addIntVar( VI_TRIG_PROT_SYNC );
#endif

#ifdef VI_TRIG_PROT_RESERVE
addIntVar( VI_TRIG_PROT_RESERVE );
#endif

#ifdef VI_TRIG_PROT_UNRESERVE
addIntVar( VI_TRIG_PROT_UNRESERVE );
#endif

#ifdef VI_READ_BUF
addIntVar( VI_READ_BUF );
#endif

#ifdef VI_WRITE_BUF
addIntVar( VI_WRITE_BUF );
#endif

#ifdef VI_READ_BUF_DISCARD
addIntVar( VI_READ_BUF_DISCARD );
#endif

#ifdef VI_WRITE_BUF_DISCARD
addIntVar( VI_WRITE_BUF_DISCARD );
#endif

#ifdef VI_IO_IN_BUF
addIntVar( VI_IO_IN_BUF );
#endif

#ifdef VI_IO_OUT_BUF
addIntVar( VI_IO_OUT_BUF );
#endif

#ifdef VI_IO_IN_BUF_DISCARD
addIntVar( VI_IO_IN_BUF_DISCARD );
#endif

#ifdef VI_IO_OUT_BUF_DISCARD
addIntVar( VI_IO_OUT_BUF_DISCARD );
#endif

#ifdef VI_FLUSH_ON_ACCESS
addIntVar( VI_FLUSH_ON_ACCESS );
#endif

#ifdef VI_FLUSH_WHEN_FULL
addIntVar( VI_FLUSH_WHEN_FULL );
#endif

#ifdef VI_FLUSH_DISABLE
addIntVar( VI_FLUSH_DISABLE );
#endif

#ifdef VI_NMAPPED
addIntVar( VI_NMAPPED );
#endif

#ifdef VI_USE_OPERS
addIntVar( VI_USE_OPERS );
#endif

#ifdef VI_DEREF_ADDR
addIntVar( VI_DEREF_ADDR );
#endif

#ifdef VI_DEREF_ADDR_BYTE_SWAP
addIntVar( VI_DEREF_ADDR_BYTE_SWAP );
#endif

#ifdef VI_TMO_IMMEDIATE
addIntVar( VI_TMO_IMMEDIATE );
#endif

#ifdef VI_TMO_INFINITE
addIntVar( VI_TMO_INFINITE );
#endif

#ifdef VI_NO_LOCK
addIntVar( VI_NO_LOCK );
#endif

#ifdef VI_EXCLUSIVE_LOCK
addIntVar( VI_EXCLUSIVE_LOCK );
#endif

#ifdef VI_SHARED_LOCK
addIntVar( VI_SHARED_LOCK );
#endif

#ifdef VI_LOAD_CONFIG
addIntVar( VI_LOAD_CONFIG );
#endif

#ifdef VI_NO_SEC_ADDR
addIntVar( VI_NO_SEC_ADDR );
#endif

#ifdef VI_ASRL_PAR_NONE
addIntVar( VI_ASRL_PAR_NONE );
#endif

#ifdef VI_ASRL_PAR_ODD
addIntVar( VI_ASRL_PAR_ODD );
#endif

#ifdef VI_ASRL_PAR_EVEN
addIntVar( VI_ASRL_PAR_EVEN );
#endif

#ifdef VI_ASRL_PAR_MARK
addIntVar( VI_ASRL_PAR_MARK );
#endif

#ifdef VI_ASRL_PAR_SPACE
addIntVar( VI_ASRL_PAR_SPACE );
#endif

#ifdef VI_ASRL_STOP_ONE
addIntVar( VI_ASRL_STOP_ONE );
#endif

#ifdef VI_ASRL_STOP_ONE5
addIntVar( VI_ASRL_STOP_ONE5 );
#endif

#ifdef VI_ASRL_STOP_TWO
addIntVar( VI_ASRL_STOP_TWO );
#endif

#ifdef VI_ASRL_FLOW_NONE
addIntVar( VI_ASRL_FLOW_NONE );
#endif

#ifdef VI_ASRL_FLOW_XON_XOFF
addIntVar( VI_ASRL_FLOW_XON_XOFF );
#endif

#ifdef VI_ASRL_FLOW_RTS_CTS
addIntVar( VI_ASRL_FLOW_RTS_CTS );
#endif

#ifdef VI_ASRL_FLOW_DTR_DSR
addIntVar( VI_ASRL_FLOW_DTR_DSR );
#endif

#ifdef VI_ASRL_END_NONE
addIntVar( VI_ASRL_END_NONE );
#endif

#ifdef VI_ASRL_END_LAST_BIT
addIntVar( VI_ASRL_END_LAST_BIT );
#endif

#ifdef VI_ASRL_END_TERMCHAR
addIntVar( VI_ASRL_END_TERMCHAR );
#endif

#ifdef VI_ASRL_END_BREAK
addIntVar( VI_ASRL_END_BREAK );
#endif

#ifdef VI_STATE_ASSERTED
addIntVar( VI_STATE_ASSERTED );
#endif

#ifdef VI_STATE_UNASSERTED
addIntVar( VI_STATE_UNASSERTED );
#endif

#ifdef VI_STATE_UNKNOWN
addIntVar( VI_STATE_UNKNOWN );
#endif

#ifdef VI_BIG_ENDIAN
addIntVar( VI_BIG_ENDIAN );
#endif

#ifdef VI_LITTLE_ENDIAN
addIntVar( VI_LITTLE_ENDIAN );
#endif

#ifdef VI_DATA_PRIV
addIntVar( VI_DATA_PRIV );
#endif

#ifdef VI_DATA_NPRIV
addIntVar( VI_DATA_NPRIV );
#endif

#ifdef VI_PROG_PRIV
addIntVar( VI_PROG_PRIV );
#endif

#ifdef VI_PROG_NPRIV
addIntVar( VI_PROG_NPRIV );
#endif

#ifdef VI_BLCK_PRIV
addIntVar( VI_BLCK_PRIV );
#endif

#ifdef VI_BLCK_NPRIV
addIntVar( VI_BLCK_NPRIV );
#endif

#ifdef VI_D64_PRIV
addIntVar( VI_D64_PRIV );
#endif

#ifdef VI_D64_NPRIV
addIntVar( VI_D64_NPRIV );
#endif

#ifdef VI_WIDTH_8
addIntVar( VI_WIDTH_8 );
#endif

#ifdef VI_WIDTH_16
addIntVar( VI_WIDTH_16 );
#endif

#ifdef VI_WIDTH_32
addIntVar( VI_WIDTH_32 );
#endif

#ifdef VI_WIDTH_64
addIntVar( VI_WIDTH_64 );
#endif

#ifdef VI_GPIB_REN_DEASSERT
addIntVar( VI_GPIB_REN_DEASSERT );
#endif

#ifdef VI_GPIB_REN_ASSERT
addIntVar( VI_GPIB_REN_ASSERT );
#endif

#ifdef VI_GPIB_REN_DEASSERT_GTL
addIntVar( VI_GPIB_REN_DEASSERT_GTL );
#endif

#ifdef VI_GPIB_REN_ASSERT_ADDRESS
addIntVar( VI_GPIB_REN_ASSERT_ADDRESS );
#endif

#ifdef VI_GPIB_REN_ASSERT_LLO
addIntVar( VI_GPIB_REN_ASSERT_LLO );
#endif

#ifdef VI_GPIB_REN_ASSERT_ADDRESS_LLO
addIntVar( VI_GPIB_REN_ASSERT_ADDRESS_LLO );
#endif

#ifdef VI_GPIB_REN_ADDRESS_GTL
addIntVar( VI_GPIB_REN_ADDRESS_GTL );
#endif

#ifdef VI_GPIB_ATN_DEASSERT
addIntVar( VI_GPIB_ATN_DEASSERT );
#endif

#ifdef VI_GPIB_ATN_ASSERT
addIntVar( VI_GPIB_ATN_ASSERT );
#endif

#ifdef VI_GPIB_ATN_DEASSERT_HANDSHAKE
addIntVar( VI_GPIB_ATN_DEASSERT_HANDSHAKE );
#endif

#ifdef VI_GPIB_ATN_ASSERT_IMMEDIATE
addIntVar( VI_GPIB_ATN_ASSERT_IMMEDIATE );
#endif

#ifdef VI_GPIB_HS488_DISABLED
addIntVar( VI_GPIB_HS488_DISABLED );
#endif

#ifdef VI_GPIB_HS488_NIMPL
addIntVar( VI_GPIB_HS488_NIMPL );
#endif

#ifdef VI_GPIB_UNADDRESSED
addIntVar( VI_GPIB_UNADDRESSED );
#endif

#ifdef VI_GPIB_TALKER
addIntVar( VI_GPIB_TALKER );
#endif

#ifdef VI_GPIB_LISTENER
addIntVar( VI_GPIB_LISTENER );
#endif

#ifdef VI_VXI_CMD16
addIntVar( VI_VXI_CMD16 );
#endif

#ifdef VI_VXI_CMD16_RESP16
addIntVar( VI_VXI_CMD16_RESP16 );
#endif

#ifdef VI_VXI_RESP16
addIntVar( VI_VXI_RESP16 );
#endif

#ifdef VI_VXI_CMD32
addIntVar( VI_VXI_CMD32 );
#endif

#ifdef VI_VXI_CMD32_RESP16
addIntVar( VI_VXI_CMD32_RESP16 );
#endif

#ifdef VI_VXI_CMD32_RESP32
addIntVar( VI_VXI_CMD32_RESP32 );
#endif

#ifdef VI_VXI_RESP32
addIntVar( VI_VXI_RESP32 );
#endif

#ifdef VI_ASSERT_SIGNAL
addIntVar( VI_ASSERT_SIGNAL );
#endif

#ifdef VI_ASSERT_USE_ASSIGNED
addIntVar( VI_ASSERT_USE_ASSIGNED );
#endif

#ifdef VI_ASSERT_IRQ1
addIntVar( VI_ASSERT_IRQ1 );
#endif

#ifdef VI_ASSERT_IRQ2
addIntVar( VI_ASSERT_IRQ2 );
#endif

#ifdef VI_ASSERT_IRQ3
addIntVar( VI_ASSERT_IRQ3 );
#endif

#ifdef VI_ASSERT_IRQ4
addIntVar( VI_ASSERT_IRQ4 );
#endif

#ifdef VI_ASSERT_IRQ5
addIntVar( VI_ASSERT_IRQ5 );
#endif

#ifdef VI_ASSERT_IRQ6
addIntVar( VI_ASSERT_IRQ6 );
#endif

#ifdef VI_ASSERT_IRQ7
addIntVar( VI_ASSERT_IRQ7 );
#endif

#ifdef VI_UTIL_ASSERT_SYSRESET
addIntVar( VI_UTIL_ASSERT_SYSRESET );
#endif

#ifdef VI_UTIL_ASSERT_SYSFAIL
addIntVar( VI_UTIL_ASSERT_SYSFAIL );
#endif

#ifdef VI_UTIL_DEASSERT_SYSFAIL
addIntVar( VI_UTIL_DEASSERT_SYSFAIL );
#endif

#ifdef VI_VXI_CLASS_MEMORY
addIntVar( VI_VXI_CLASS_MEMORY );
#endif

#ifdef VI_VXI_CLASS_EXTENDED
addIntVar( VI_VXI_CLASS_EXTENDED );
#endif

#ifdef VI_VXI_CLASS_MESSAGE
addIntVar( VI_VXI_CLASS_MESSAGE );
#endif

#ifdef VI_VXI_CLASS_REGISTER
addIntVar( VI_VXI_CLASS_REGISTER );
#endif

#ifdef VI_VXI_CLASS_OTHER
addIntVar( VI_VXI_CLASS_OTHER );
#endif

#ifdef VI_PXI_ADDR_NONE
addIntVar( VI_PXI_ADDR_NONE );
#endif

#ifdef VI_PXI_ADDR_MEM
addIntVar( VI_PXI_ADDR_MEM );
#endif

#ifdef VI_PXI_ADDR_IO
addIntVar( VI_PXI_ADDR_IO );
#endif

#ifdef VI_PXI_ADDR_CFG
addIntVar( VI_PXI_ADDR_CFG );
#endif

#ifdef VI_TRIG_UNKNOWN
addIntVar( VI_TRIG_UNKNOWN );
#endif

#ifdef VI_PXI_LBUS_UNKNOWN
addIntVar( VI_PXI_LBUS_UNKNOWN );
#endif

#ifdef VI_PXI_LBUS_NONE
addIntVar( VI_PXI_LBUS_NONE );
#endif

#ifdef VI_PXI_LBUS_STAR_TRIG_BUS_0
addIntVar( VI_PXI_LBUS_STAR_TRIG_BUS_0 );
#endif

#ifdef VI_PXI_LBUS_STAR_TRIG_BUS_1
addIntVar( VI_PXI_LBUS_STAR_TRIG_BUS_1 );
#endif

#ifdef VI_PXI_LBUS_STAR_TRIG_BUS_2
addIntVar( VI_PXI_LBUS_STAR_TRIG_BUS_2 );
#endif

#ifdef VI_PXI_LBUS_STAR_TRIG_BUS_3
addIntVar( VI_PXI_LBUS_STAR_TRIG_BUS_3 );
#endif

#ifdef VI_PXI_LBUS_STAR_TRIG_BUS_4
addIntVar( VI_PXI_LBUS_STAR_TRIG_BUS_4 );
#endif

#ifdef VI_PXI_LBUS_STAR_TRIG_BUS_5
addIntVar( VI_PXI_LBUS_STAR_TRIG_BUS_5 );
#endif

#ifdef VI_PXI_LBUS_STAR_TRIG_BUS_6
addIntVar( VI_PXI_LBUS_STAR_TRIG_BUS_6 );
#endif

#ifdef VI_PXI_LBUS_STAR_TRIG_BUS_7
addIntVar( VI_PXI_LBUS_STAR_TRIG_BUS_7 );
#endif

#ifdef VI_PXI_LBUS_STAR_TRIG_BUS_8
addIntVar( VI_PXI_LBUS_STAR_TRIG_BUS_8 );
#endif

#ifdef VI_PXI_LBUS_STAR_TRIG_BUS_9
addIntVar( VI_PXI_LBUS_STAR_TRIG_BUS_9 );
#endif

#ifdef VI_PXI_STAR_TRIG_CONTROLLER
addIntVar( VI_PXI_STAR_TRIG_CONTROLLER );
#endif

#ifdef VI_SUCCESS_EVENT_EN
addIntVar( VI_SUCCESS_EVENT_EN );
#endif

#ifdef VI_SUCCESS_EVENT_DIS
addIntVar( VI_SUCCESS_EVENT_DIS );
#endif

#ifdef VI_SUCCESS_QUEUE_EMPTY
addIntVar( VI_SUCCESS_QUEUE_EMPTY );
#endif

#ifdef VI_SUCCESS_TERM_CHAR
addIntVar( VI_SUCCESS_TERM_CHAR );
#endif

#ifdef VI_SUCCESS_MAX_CNT
addIntVar( VI_SUCCESS_MAX_CNT );
#endif

#ifdef VI_SUCCESS_DEV_NPRESENT
addIntVar( VI_SUCCESS_DEV_NPRESENT );
#endif

#ifdef VI_SUCCESS_TRIG_MAPPED
addIntVar( VI_SUCCESS_TRIG_MAPPED );
#endif

#ifdef VI_SUCCESS_QUEUE_NEMPTY
addIntVar( VI_SUCCESS_QUEUE_NEMPTY );
#endif

#ifdef VI_SUCCESS_NCHAIN
addIntVar( VI_SUCCESS_NCHAIN );
#endif

#ifdef VI_SUCCESS_NESTED_SHARED
addIntVar( VI_SUCCESS_NESTED_SHARED );
#endif

#ifdef VI_SUCCESS_NESTED_EXCLUSIVE
addIntVar( VI_SUCCESS_NESTED_EXCLUSIVE );
#endif

#ifdef VI_SUCCESS_SYNC
addIntVar( VI_SUCCESS_SYNC );
#endif

#ifdef VI_WARN_QUEUE_OVERFLOW
addIntVar( VI_WARN_QUEUE_OVERFLOW );
#endif

#ifdef VI_WARN_CONFIG_NLOADED
addIntVar( VI_WARN_CONFIG_NLOADED );
#endif

#ifdef VI_WARN_NULL_OBJECT
addIntVar( VI_WARN_NULL_OBJECT );
#endif

#ifdef VI_WARN_NSUP_ATTR_STATE
addIntVar( VI_WARN_NSUP_ATTR_STATE );
#endif

#ifdef VI_WARN_UNKNOWN_STATUS
addIntVar( VI_WARN_UNKNOWN_STATUS );
#endif

#ifdef VI_WARN_NSUP_BUF
addIntVar( VI_WARN_NSUP_BUF );
#endif

#ifdef VI_WARN_EXT_FUNC_NIMPL
addIntVar( VI_WARN_EXT_FUNC_NIMPL );
#endif

#ifdef VI_ERROR_SYSTEM_ERROR
addIntVar( VI_ERROR_SYSTEM_ERROR );
#endif

#ifdef VI_ERROR_INV_OBJECT
addIntVar( VI_ERROR_INV_OBJECT );
#endif

#ifdef VI_ERROR_RSRC_LOCKED
addIntVar( VI_ERROR_RSRC_LOCKED );
#endif

#ifdef VI_ERROR_INV_EXPR
addIntVar( VI_ERROR_INV_EXPR );
#endif

#ifdef VI_ERROR_RSRC_NFOUND
addIntVar( VI_ERROR_RSRC_NFOUND );
#endif

#ifdef VI_ERROR_INV_RSRC_NAME
addIntVar( VI_ERROR_INV_RSRC_NAME );
#endif

#ifdef VI_ERROR_INV_ACC_MODE
addIntVar( VI_ERROR_INV_ACC_MODE );
#endif

#ifdef VI_ERROR_TMO
addIntVar( VI_ERROR_TMO );
#endif

#ifdef VI_ERROR_CLOSING_FAILED
addIntVar( VI_ERROR_CLOSING_FAILED );
#endif

#ifdef VI_ERROR_INV_DEGREE
addIntVar( VI_ERROR_INV_DEGREE );
#endif

#ifdef VI_ERROR_INV_JOB_ID
addIntVar( VI_ERROR_INV_JOB_ID );
#endif

#ifdef VI_ERROR_NSUP_ATTR
addIntVar( VI_ERROR_NSUP_ATTR );
#endif

#ifdef VI_ERROR_NSUP_ATTR_STATE
addIntVar( VI_ERROR_NSUP_ATTR_STATE );
#endif

#ifdef VI_ERROR_ATTR_READONLY
addIntVar( VI_ERROR_ATTR_READONLY );
#endif

#ifdef VI_ERROR_INV_LOCK_TYPE
addIntVar( VI_ERROR_INV_LOCK_TYPE );
#endif

#ifdef VI_ERROR_INV_ACCESS_KEY
addIntVar( VI_ERROR_INV_ACCESS_KEY );
#endif

#ifdef VI_ERROR_INV_EVENT
addIntVar( VI_ERROR_INV_EVENT );
#endif

#ifdef VI_ERROR_INV_MECH
addIntVar( VI_ERROR_INV_MECH );
#endif

#ifdef VI_ERROR_HNDLR_NINSTALLED
addIntVar( VI_ERROR_HNDLR_NINSTALLED );
#endif

#ifdef VI_ERROR_INV_HNDLR_REF
addIntVar( VI_ERROR_INV_HNDLR_REF );
#endif

#ifdef VI_ERROR_INV_CONTEXT
addIntVar( VI_ERROR_INV_CONTEXT );
#endif

#ifdef VI_ERROR_QUEUE_OVERFLOW
addIntVar( VI_ERROR_QUEUE_OVERFLOW );
#endif

#ifdef VI_ERROR_NENABLED
addIntVar( VI_ERROR_NENABLED );
#endif

#ifdef VI_ERROR_ABORT
addIntVar( VI_ERROR_ABORT );
#endif

#ifdef VI_ERROR_RAW_WR_PROT_VIOL
addIntVar( VI_ERROR_RAW_WR_PROT_VIOL );
#endif

#ifdef VI_ERROR_RAW_RD_PROT_VIOL
addIntVar( VI_ERROR_RAW_RD_PROT_VIOL );
#endif

#ifdef VI_ERROR_OUTP_PROT_VIOL
addIntVar( VI_ERROR_OUTP_PROT_VIOL );
#endif

#ifdef VI_ERROR_INP_PROT_VIOL
addIntVar( VI_ERROR_INP_PROT_VIOL );
#endif

#ifdef VI_ERROR_BERR
addIntVar( VI_ERROR_BERR );
#endif

#ifdef VI_ERROR_IN_PROGRESS
addIntVar( VI_ERROR_IN_PROGRESS );
#endif

#ifdef VI_ERROR_INV_SETUP
addIntVar( VI_ERROR_INV_SETUP );
#endif

#ifdef VI_ERROR_QUEUE_ERROR
addIntVar( VI_ERROR_QUEUE_ERROR );
#endif

#ifdef VI_ERROR_ALLOC
addIntVar( VI_ERROR_ALLOC );
#endif

#ifdef VI_ERROR_INV_MASK
addIntVar( VI_ERROR_INV_MASK );
#endif

#ifdef VI_ERROR_IO
addIntVar( VI_ERROR_IO );
#endif

#ifdef VI_ERROR_INV_FMT
addIntVar( VI_ERROR_INV_FMT );
#endif

#ifdef VI_ERROR_NSUP_FMT
addIntVar( VI_ERROR_NSUP_FMT );
#endif

#ifdef VI_ERROR_LINE_IN_USE
addIntVar( VI_ERROR_LINE_IN_USE );
#endif

#ifdef VI_ERROR_NSUP_MODE
addIntVar( VI_ERROR_NSUP_MODE );
#endif

#ifdef VI_ERROR_SRQ_NOCCURRED
addIntVar( VI_ERROR_SRQ_NOCCURRED );
#endif

#ifdef VI_ERROR_INV_SPACE
addIntVar( VI_ERROR_INV_SPACE );
#endif

#ifdef VI_ERROR_INV_OFFSET
addIntVar( VI_ERROR_INV_OFFSET );
#endif

#ifdef VI_ERROR_INV_WIDTH
addIntVar( VI_ERROR_INV_WIDTH );
#endif

#ifdef VI_ERROR_NSUP_OFFSET
addIntVar( VI_ERROR_NSUP_OFFSET );
#endif

#ifdef VI_ERROR_NSUP_VAR_WIDTH
addIntVar( VI_ERROR_NSUP_VAR_WIDTH );
#endif

#ifdef VI_ERROR_WINDOW_NMAPPED
addIntVar( VI_ERROR_WINDOW_NMAPPED );
#endif

#ifdef VI_ERROR_RESP_PENDING
addIntVar( VI_ERROR_RESP_PENDING );
#endif

#ifdef VI_ERROR_NLISTENERS
addIntVar( VI_ERROR_NLISTENERS );
#endif

#ifdef VI_ERROR_NCIC
addIntVar( VI_ERROR_NCIC );
#endif

#ifdef VI_ERROR_NSYS_CNTLR
addIntVar( VI_ERROR_NSYS_CNTLR );
#endif

#ifdef VI_ERROR_NSUP_OPER
addIntVar( VI_ERROR_NSUP_OPER );
#endif

#ifdef VI_ERROR_INTR_PENDING
addIntVar( VI_ERROR_INTR_PENDING );
#endif

#ifdef VI_ERROR_ASRL_PARITY
addIntVar( VI_ERROR_ASRL_PARITY );
#endif

#ifdef VI_ERROR_ASRL_FRAMING
addIntVar( VI_ERROR_ASRL_FRAMING );
#endif

#ifdef VI_ERROR_ASRL_OVERRUN
addIntVar( VI_ERROR_ASRL_OVERRUN );
#endif

#ifdef VI_ERROR_TRIG_NMAPPED
addIntVar( VI_ERROR_TRIG_NMAPPED );
#endif

#ifdef VI_ERROR_NSUP_ALIGN_OFFSET
addIntVar( VI_ERROR_NSUP_ALIGN_OFFSET );
#endif

#ifdef VI_ERROR_USER_BUF
addIntVar( VI_ERROR_USER_BUF );
#endif

#ifdef VI_ERROR_RSRC_BUSY
addIntVar( VI_ERROR_RSRC_BUSY );
#endif

#ifdef VI_ERROR_NSUP_WIDTH
addIntVar( VI_ERROR_NSUP_WIDTH );
#endif

#ifdef VI_ERROR_INV_PARAMETER
addIntVar( VI_ERROR_INV_PARAMETER );
#endif

#ifdef VI_ERROR_INV_PROT
addIntVar( VI_ERROR_INV_PROT );
#endif

#ifdef VI_ERROR_INV_SIZE
addIntVar( VI_ERROR_INV_SIZE );
#endif

#ifdef VI_ERROR_WINDOW_MAPPED
addIntVar( VI_ERROR_WINDOW_MAPPED );
#endif

#ifdef VI_ERROR_NIMPL_OPER
addIntVar( VI_ERROR_NIMPL_OPER );
#endif

#ifdef VI_ERROR_INV_LENGTH
addIntVar( VI_ERROR_INV_LENGTH );
#endif

#ifdef VI_ERROR_INV_MODE
addIntVar( VI_ERROR_INV_MODE );
#endif

#ifdef VI_ERROR_SESN_NLOCKED
addIntVar( VI_ERROR_SESN_NLOCKED );
#endif

#ifdef VI_ERROR_MEM_NSHARED
addIntVar( VI_ERROR_MEM_NSHARED );
#endif

#ifdef VI_ERROR_LIBRARY_NFOUND
addIntVar( VI_ERROR_LIBRARY_NFOUND );
#endif

#ifdef VI_ERROR_NSUP_INTR
addIntVar( VI_ERROR_NSUP_INTR );
#endif

#ifdef VI_ERROR_INV_LINE
addIntVar( VI_ERROR_INV_LINE );
#endif

#ifdef VI_ERROR_FILE_ACCESS
addIntVar( VI_ERROR_FILE_ACCESS );
#endif

#ifdef VI_ERROR_FILE_IO
addIntVar( VI_ERROR_FILE_IO );
#endif

#ifdef VI_ERROR_NSUP_LINE
addIntVar( VI_ERROR_NSUP_LINE );
#endif

#ifdef VI_ERROR_NSUP_MECH
addIntVar( VI_ERROR_NSUP_MECH );
#endif

#ifdef VI_ERROR_INTF_NUM_NCONFIG
addIntVar( VI_ERROR_INTF_NUM_NCONFIG );
#endif

#ifdef VI_ERROR_CONN_LOST
addIntVar( VI_ERROR_CONN_LOST );
#endif

#ifdef VI_ERROR_MACHINE_NAVAIL
addIntVar( VI_ERROR_MACHINE_NAVAIL );
#endif

#ifdef VI_ERROR_NPERMISSION
addIntVar( VI_ERROR_NPERMISSION );
#endif
